version: "3.8"

services:

  apollo-server-with-federation-as-a-gateway:
    container_name: apollo-server-with-federation-as-a-gateway
    build:
      context: ./apollo-server-with-federation-as-a-gateway
    ports:
      - "4000:4000"
    restart: always
    depends_on:
      - spring-server-with-federation-as-a-subgraph
      - spring-server-with-federation-as-a-subscription
    command: npm run start
    environment:
      APOLLO_ELV2_LICENSE: accept

  spring-server-with-federation-as-a-subgraph:
    container_name: spring-server-with-federation-as-a-subgraph
    restart: always
    build:
      context: ./spring-server-with-federation-as-a-subgraph
    ports:
      - "8080:8080"
    depends_on:
      - redis-for-connecting-subgraph-and-subscription
      - kafka-for-connecting-subgraph-and-subscription
    command: java -jar build/libs/app.jar
    env_file:
      - docker-compose-spring-server.env

  spring-server-with-federation-as-a-subscription:
    container_name: spring-server-with-federation-as-a-subscription
    restart: always
    build:
      context: ./spring-server-with-federation-as-a-subscription
    ports:
      - "8081:8081"
    depends_on:
      - redis-for-connecting-subgraph-and-subscription
      - kafka-for-connecting-subgraph-and-subscription
    command: java -jar build/libs/app.jar
    env_file:
      - docker-compose-spring-server.env

  redis-for-connecting-subgraph-and-subscription:
#    image: redis:5.0.9-alpine
    container_name: redis-for-connecting-subgraph-and-subscription
    build:
      context: ./redis-for-connecting-subgraph-and-subscription
    ports:
      - "6379:6379"
    restart: always
    environment:
      HELLO: WORLD

  react-client-app-for-connect-with-subscription:
    container_name: react-client-app-for-connect-with-subscription
    restart: always
    build:
      context: ./react-client-app-for-connect-with-subscription
    env_file:
      - ./react-client-app-for-connect-with-subscription/.env
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - spring-server-with-federation-as-a-subscription
    command: npm start

  # 아래는 Kafka 관련 서비스 정보
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka-for-connecting-subgraph-and-subscription:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-for-connecting-subgraph-and-subscription:9092,PLAINTEXT_HOST://kafka-for-connecting-subgraph-and-subscription:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  console:
    image: docker.redpanda.com/redpandadata/console:v2.3.5
    depends_on:
      - kafka-for-connecting-subgraph-and-subscription
    ports:
      - "18080:8080"
    environment:
      KAFKA_BROKERS: kafka-for-connecting-subgraph-and-subscription:9092
