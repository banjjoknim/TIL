schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION)
{
  query: Query
  subscription: Subscription
}

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

type BookResponse
  @join__type(graph: BOOK_API)
{
  number: Int!
  title: String!
}

scalar join__FieldSet

enum join__Graph {
  BOOK_API @join__graph(name: "book_api", url: "http://localhost:8080/graphql")
  BOOK_SUBSCRIPTION @join__graph(name: "book_subscription", url: "http://localhost:8081/graphql")
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Query
  @join__type(graph: BOOK_API)
  @join__type(graph: BOOK_SUBSCRIPTION)
{
  """번호로 책을 조회한다."""
  getBook(number: Int!): BookResponse! @join__field(graph: BOOK_API)
}

type Subscription
  @join__type(graph: BOOK_SUBSCRIPTION)
{
  """무작위 번호로 책 이름을 조회한다."""
  randomBookName: String!
}