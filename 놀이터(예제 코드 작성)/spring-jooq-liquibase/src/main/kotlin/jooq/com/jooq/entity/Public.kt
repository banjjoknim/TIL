/*
 * This file is generated by jOOQ.
 */
package com.jooq.entity


import com.jooq.entity.tables.Databasechangelog
import com.jooq.entity.tables.Databasechangeloglock
import com.jooq.entity.tables.LiquibaseInit
import com.jooq.entity.tables.Order

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("PUBLIC", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>PUBLIC</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>PUBLIC.DATABASECHANGELOG</code>.
     */
    val DATABASECHANGELOG: Databasechangelog get() = Databasechangelog.DATABASECHANGELOG

    /**
     * The table <code>PUBLIC.DATABASECHANGELOGLOCK</code>.
     */
    val DATABASECHANGELOGLOCK: Databasechangeloglock get() = Databasechangeloglock.DATABASECHANGELOGLOCK

    /**
     * The table <code>PUBLIC.LIQUIBASE_INIT</code>.
     */
    val LIQUIBASE_INIT: LiquibaseInit get() = LiquibaseInit.LIQUIBASE_INIT

    /**
     * The table <code>PUBLIC.ORDER</code>.
     */
    val ORDER: Order get() = Order.ORDER

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Databasechangelog.DATABASECHANGELOG,
        Databasechangeloglock.DATABASECHANGELOGLOCK,
        LiquibaseInit.LIQUIBASE_INIT,
        Order.ORDER
    )
}
