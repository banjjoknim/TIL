/*
 * This file is generated by jOOQ.
 */
package com.jooq.entity.tables.records


import com.jooq.entity.tables.LiquibaseInit

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class LiquibaseInitRecord() : TableRecordImpl<LiquibaseInitRecord>(LiquibaseInit.LIQUIBASE_INIT), Record4<Int?, String?, String?, LocalDateTime?> {

    var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    var author: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    var initAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<Int?, String?, String?, LocalDateTime?> = super.fieldsRow() as Row4<Int?, String?, String?, LocalDateTime?>
    override fun valuesRow(): Row4<Int?, String?, String?, LocalDateTime?> = super.valuesRow() as Row4<Int?, String?, String?, LocalDateTime?>
    override fun field1(): Field<Int?> = LiquibaseInit.LIQUIBASE_INIT.ID
    override fun field2(): Field<String?> = LiquibaseInit.LIQUIBASE_INIT.AUTHOR
    override fun field3(): Field<String?> = LiquibaseInit.LIQUIBASE_INIT.DESCRIPTION
    override fun field4(): Field<LocalDateTime?> = LiquibaseInit.LIQUIBASE_INIT.INIT_AT
    override fun component1(): Int? = id
    override fun component2(): String? = author
    override fun component3(): String? = description
    override fun component4(): LocalDateTime? = initAt
    override fun value1(): Int? = id
    override fun value2(): String? = author
    override fun value3(): String? = description
    override fun value4(): LocalDateTime? = initAt

    override fun value1(value: Int?): LiquibaseInitRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): LiquibaseInitRecord {
        this.author = value
        return this
    }

    override fun value3(value: String?): LiquibaseInitRecord {
        this.description = value
        return this
    }

    override fun value4(value: LocalDateTime?): LiquibaseInitRecord {
        this.initAt = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: LocalDateTime?): LiquibaseInitRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised LiquibaseInitRecord
     */
    constructor(id: Int? = null, author: String? = null, description: String? = null, initAt: LocalDateTime? = null): this() {
        this.id = id
        this.author = author
        this.description = description
        this.initAt = initAt
    }

    /**
     * Create a detached, initialised LiquibaseInitRecord
     */
    constructor(value: com.jooq.entity.tables.pojos.LiquibaseInit?): this() {
        if (value != null) {
            this.id = value.id
            this.author = value.author
            this.description = value.description
            this.initAt = value.initAt
        }
    }
}
